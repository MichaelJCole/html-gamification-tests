(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["2d0e8be2"],{"8b24":function(e,n,t){"use strict";t.r(n);var a=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("q-page",[t("q-markdown",{staticClass:"q-ma-xl",attrs:{src:e.readme}})],1)},o=[],s="# HTML Gamification Tests\n\nI'm interested in gamifying productivity applications, and wanted to get my hands into some attempts.\n\nThe goal was to use Quasar/Vue as the framework for a productivity app, and gamify it.\n\nThis project is an engineering journal of those attempts.\n\nWhat I learned is you don't need a game engine to make a game, unless you need an asset pipeline or a physics engine.\n\n## HearthClone (Vue + Howler + requestAnimationFrame())\n\nI converted this [codepen](https://codepen.io/jackrugile/pen/zqJdXM) to [Vue components](https://vuejs.org/v2/guide/components.html) and integrated [Howler](https://howlerjs.com/) to play the sounds.\n\nThis is a fun example of how little interaction (click to flip and drag to whoosh) can gamify an experience.  The sparkle sound sells the magic.\n\n## Crossing (HTML5 Canvas)\n\nA tiny game build on a canvas without any game engine.  The simplest thing that could possibly work.  I built this from a tutorial I lost.\n\nThis is proof you don't need a game engine to write a game, and a demonstration of what a game engine offers - an asset pipeline.\n\nFrom here moved forward working with Phaser.io and attempting to integrate it with Quasar.\n\n## Crossing, Virtual Pet, Spanish, and Monster Kong (Phaser.io)\n\nI built these from a Phaser.io course, then attempted to integrate them with Vue and Quasar.\n\nUnfortunately Phaser.io is focused on Cordova (mobile) development and is super not into Webpack.  Some glue code and settings fiddling later, I hit commit and moved on.  You can see some of that integratino work here:\n\n```\nsrc/components/vue-phaser.vue - a Vue component to wrap Phaser\nsrc/lib/quasarPhaser.js  -  monkey patching the asset loaders\n```\n\nMy goal was gamify a Vue productivity app and in the end, Phaser.io wasn't needed - not because it's bad, but because it's to heavy.",i={name:"Readme",data:function(){return{readme:s}}},r=i,d=t("42e1"),u=Object(d["a"])(r,a,o,!1,null,null,null);n["default"]=u.exports}}]);